import /init.recovery.${ro.hardware}.rc

on early-init
    # Apply strict SELinux checking of PROT_EXEC on mmap/mprotect calls.
    write /sys/fs/selinux/checkreqprot 0

    # Set the security context for the init process.
    # This should occur before anything else (e.g. ueventd) is started.
    setcon u:r:init:s0

    start ueventd
    start healthd

on init
    export PATH /sbin:/system/bin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    symlink /system/etc /etc
    mkdir /ram0
    #mkdir /sdcard
    mkdir /system
    mkdir /custom
    mkdir /sdcard1
    mkdir /storage
    mkdir /storage/sdcard1
    mkdir /nvdata
    mkdir /data
    mkdir /cache
    mkdir /sideload
    mount tmpfs tmpfs /tmp

    chown root shell /tmp
    chmod 0775 /tmp

    write /proc/sys/kernel/panic_on_oops 1

on fs
    mkdir /dev/usb-ffs 0770 shell shell
    mkdir /dev/usb-ffs/adb 0770 shell shell
    mount functionfs adb /dev/usb-ffs/adb uid=2000,gid=2000

    chmod 0666 /dev/kmsg
    start fuelgauged
    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 2A45
    write /sys/class/android_usb/android0/idProduct 0001
    write /sys/class/android_usb/android0/functions mass_storage
    write /sys/class/android_usb/android0/enable 1


    #yangjiajun@wind-mobi.com 2015-7-10 begin
    #for meizu redmine bug:187460
    #yangjiajun@wind-mobi.com 2015-7-10 end

# yangjiajun@wind-mobi.com 2015-6-6 begin
# meizu patch
    write /sys/block/mmcblk0boot0/force_ro 0
# yangjiajun@wind-mobi.com 2015-6-6 end

on boot
    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

# Load properties from /system/ + /factory after fs mount.
on load_all_props_action
    load_all_props

# Mount filesystems and start core system services.
on late-init
    trigger early-fs
    trigger fs
    trigger post-fs
    trigger post-fs-data

    # Load properties from /system/ + /factory after fs mount. Place
    # this in another action so that the load will be scheduled after the prior
    # issued fs triggers have completed.
    trigger load_all_props_action

    # Remove a file to wake up anything waiting for firmware
    trigger firmware_mounts_complete

    trigger early-boot
    trigger boot

on property:sys.powerctl=*
   powerctl ${sys.powerctl}

service ueventd /sbin/ueventd
    critical
    seclabel u:r:ueventd:s0

service fuelgauged /sbin/fuelgauged_static
    seclabel u:r:init:s0

service healthd /sbin/healthd -r
    critical
    seclabel u:r:healthd:s0

service recovery /sbin/recovery
    seclabel u:r:recovery:s0


